(program (block (statement (assignment (assignmentUnit (postfixExpression (primaryExpression (identifier x)))) (assignOp =) (exp (postfixExpression (primaryExpression (number 2))))))) (block (statement (conditional if (exp (exp (postfixExpression (primaryExpression (identifier x)))) (equality ==) (exp (postfixExpression (primaryExpression (number 1))))) : (body (statement (postfixExpression (postfixExpression (primaryExpression (identifier console))) (propOp .) (postfixExpression (postfixExpression (primaryExpression (identifier log))) ( (expList (exp (postfixExpression (primaryExpression (string "X é 1"))))) )))) (statement (postfixExpression (postfixExpression (primaryExpression (identifier console))) (propOp .) (postfixExpression (postfixExpression (primaryExpression (identifier log))) ( (expList (exp (postfixExpression (primaryExpression (string "Outra coisa:"))))) ))))) (if_elseif else if) (exp (exp (postfixExpression (primaryExpression (identifier x)))) (equality ==) (exp (postfixExpression (primaryExpression (number 2))))) : (body (statement (postfixExpression (postfixExpression (primaryExpression (identifier console))) (propOp .) (postfixExpression (postfixExpression (primaryExpression (identifier log))) ( (expList (exp (postfixExpression (primaryExpression (string "X é 2"))))) )))) (statement (postfixExpression (postfixExpression (primaryExpression (identifier console))) (propOp .) (postfixExpression (postfixExpression (primaryExpression (identifier log))) ( (expList (exp (postfixExpression (primaryExpression (string "E mais uma coisa..."))))) )))) (statement (postfixExpression (postfixExpression (primaryExpression (identifier console))) (propOp .) (postfixExpression (postfixExpression (primaryExpression (identifier log))) ( (expList (exp (postfixExpression (primaryExpression (string "E mais outra coisa..."))))) ))))) end))) <EOF>)