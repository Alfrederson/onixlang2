(program (block (sub_def sub (identifier Carro) (parlist (par (identifier modelo))) : (body (statement (assignment (assignmentUnit (postfixExpression (postfixExpression (primaryExpression (identifier this))) (propOp .) (postfixExpression (primaryExpression (identifier name))))) (assignOp =) (exp (postfixExpression (primaryExpression (string "Vovorola")))))) (statement (retStatement return (exp (postfixExpression (primaryExpression (identifier this))))))) fim)) (block (statement (declaration (varDeclaration var (type (identifier object)) : (decUnit (identifier veiculo) = (exp (postfixExpression (primaryExpression (nil nada))))))))) (block (statement (conditional se (exp (exp (postfixExpression (primaryExpression (identifier veiculo)))) (equality ==) (exp (postfixExpression (primaryExpression (nil nada))))) : (body (statement (postfixExpression (postfixExpression (primaryExpression (identifier console))) (propOp .) (postfixExpression (postfixExpression (primaryExpression (identifier log))) ( (expList (exp (postfixExpression (primaryExpression (string "O veículo não existe."))))) ))))) fim))) <EOF>)